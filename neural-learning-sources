Contains learning sources for neural networks and/or python

Len and Arrays

>>> train_data.shape
(60000, 28, 28)
>>> len(train_data)
60000

>>> myList = [ 'a', 'b', 'c']
>>> len(myList)
3
>>> anotherList = np.zeros( (2,3))
>>> anotherList
array([[0., 0., 0.],
       [0., 0., 0.]])
>>> len(anotherList)
2


Arrays - modifying multiple elements with one statement
       - using a list or a range for one of the axes

>>> y = [2,5,7]
>>> myArray = np.zeros( (5,20) )  #all zeros in 5 x 20 array
>>> myArray[3,y] = 1              #change 3 values
>>> myArray 
array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.],
       [0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.]])
>>> myArray[4, 10:] = 1
>>> myArray
array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.],
       [0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1.]])

Tensor Slicing
>>> y = [2,5,7]
>>> x = np.zeros( (4,12))
>>> x
array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]])
>>> x[2,y]=1         #using a list as indices - is this technically slicing?
>>> x
array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]])
>>> x[2,y]
array([1., 1., 1.])  #returns only the 3 values for those indices - is this slicing?


NETWORKS
http://cs231n.github.io/convolutional-networks/ 
http://neuralnetworksanddeeplearning.com/chap1.html

Review:
(pending)


http://cs231n.github.io/classification/
- if you're not familiar with python, or the conventiont that numpy is imported as np, this will be confusing
- on the other hand, there's an introduction to python as part of the same article series
- you need to undestand things like "dimension" - which are not explained in this article, but possibly in the prev - will review
